 /******************************************************************************
 *
 * Module: Server
 *
 * File Name: server.h
 *
 * Description: Header file for server module
 *
 * Date : 11/14/2022
 *
 * Author: Youssef Osama
 *
 *******************************************************************************/
#ifndef _SERVER_
#define _SERVER_
#include "../std_types.h"
#include "../card_module/card.h"
#include "../terminal_module/terminal.h"
/********************************************************
 * 				new types definitions					*
 ********************************************************/
typedef enum EN_transState
{
     APPROVED, DECLINED_INSUFFECIENT_FUND, DECLINED_STOLEN_CARD, FRAUD_CARD, INTERNAL_SERVER_ERROR
}EN_transState;
typedef struct ST_transaction_t
{
     ST_cardData_t cardHolderData;
     ST_terminalData_t terminalData;
     EN_transState transState;
     uint32 transactionSequenceNumber;
}ST_transaction;
typedef enum EN_serverError_t
{
     SERVER_OK, SAVING_FAILED, TRANSACTION_NOT_FOUND, ACCOUNT_NOT_FOUND, LOW_BALANCE, BLOCKED_ACCOUNT
}EN_serverError_t ;
typedef enum EN_accountState_t
{
     RUNNING,
     BLOCKED
}EN_accountState_t;
typedef struct ST_accountsDB_t
{
     float balance;
     EN_accountState_t state;
     uint8 primaryAccountNumber[20];
}ST_accountsDB_t;

/********************************************************
 * 				function definitions					*
 ********************************************************/
EN_transState recieveTransactionData(ST_transaction *transData);
EN_serverError_t isValidAccount(ST_cardData_t *cardData, ST_accountsDB_t *accountRefrence);
EN_serverError_t isBlockedAccount(ST_accountsDB_t *accountRefrence);
EN_serverError_t isAmountAvailable(ST_terminalData_t *termData, ST_accountsDB_t *accountRefrence);
EN_serverError_t saveTransaction(ST_transaction *transData);
void listSavedTransactions(void);
#endif
